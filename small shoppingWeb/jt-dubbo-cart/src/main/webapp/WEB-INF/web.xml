<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	id="jt-cart" version="2.5">
	<display-name>jt-cart</display-name>
	
	<!--配置前端控制器
		说明:当有请求时,才会调用servlet实现请求的准发.
		这时springMVC容器才会启动,用户等待的时间较长,
		所以应该当tomcat启动时,就让springMVC和spring容器启动.
	  -->
	  
	  <!--没有添加初始化的参数,那么前端控制器有默认的配置名称
	  	servlet-name+"-servlet.xml" 该文件应该与web.xml平级
	    -->
	<servlet>
		<servlet-name>springmvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!--指定配置文件的路径  -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:/spring/applicationContext*.xml</param-value>
		</init-param>
		<!--第一个启动  -->
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!--
		拦截路劲的写法   前缀型路径.后缀型路径=全路径 
		*.do	        匹配以do结尾的请求
		*.action    匹配以action结尾的请求
		/           只匹配前缀型路径    /hello.
					目的使用restFul传参方便
					规则:/拦截前缀型的请求,同时拦截静态资源,
					但是放行.jsp等动态资源
		
		/*		js	过滤器中使用/*  全部的资源请求  禁止使用/*
	  -->
	<servlet-mapping>
		<servlet-name>springmvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	
	<!--全站乱码的解决 主要解决post乱码问题  -->	
	<filter>
		<filter-name>characterEncoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<!--指定过滤器的字符集编码  -->
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>characterEncoding</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
</web-app>